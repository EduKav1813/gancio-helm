apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  replicas: {{ .Values.postgres.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.env.POSTGRES_USER }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.env.POSTGRES_DB }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.env.POSTGRES_PASSWORD }}"
            - name: PGDATA
              value: "{{ .Values.postgres.env.PGDATA }}"
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
          volumeMounts:
            - mountPath: {{ .Values.postgres.volumeMounts.mountPath }}
              name: {{ .Values.postgres.volumeMounts.name }}
          resources:
            limits:
              memory: "{{ .Values.postgres.resources.limits.memory }}"
              cpu: "{{ .Values.postgres.resources.limits.cpu }}"
      volumes:
        - name: {{ .Values.postgres.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.volumes.persistentVolumeClaim.claimName }}
        - name: localtime
          hostPath:
            path: /etc/localtime
            type: File
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  selector:
    app: {{ .Release.Name }}-postgres
  ports:
    - protocol: TCP
      port: {{ .Values.postgres.service.port }}
      targetPort: {{ .Values.postgres.service.port }}
